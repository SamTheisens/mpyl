name: build

on:
  push:
    branches-ignore: ['main']

jobs:
  Build_Package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        id: cache-dependencies
        with:
          python-version: '3.9'
          cache: 'pipenv'
          cache-dependency-path: |
            Pipfile.lock
      - run: echo '${{ steps.cache-dependencies.outputs.cache-hit }}'

      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: pipenv install -d --deploy

      - name: Run lint
        run: pipenv run lint

      - name: Install Types
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: pipenv run install-types

      - name: Validate Types
        run: pipenv run check-types

      - name: Test
        run: pipenv run test-ci

      - name: Validate Config Example
        run: pipenv run validate-config-example

      - name: Coverage to xml
        run: pipenv run test-ci-coverage

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: build/coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '70 99'

      - name: Find PR number
        uses: jwalton/gh-find-current-pr@v1
        id: findPr
        if: github.ref_name != 'main'
        with:
          state: open

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          number: ${{ steps.findPr.outputs.pr }}
          path: code-coverage-results.md

      - name: Build
        if: github.ref_name != 'main'
        env:
          PIPENV_DONT_LOAD_ENV: true
          MPYL_VERSION: "${{ steps.findPr.outputs.pr }}.${{ github.run_number }}"
        run: pipenv run build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@a56da0b891b3dc519c7ee3284aff1fad93cc8598
        if: github.ref_name != 'main'
        id : publish
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          print-hash: true
          skip-existing: true

      - name: Comment Published package
        uses: thollander/actions-comment-pull-request@v2
        if: success()
        with:
          pr_number: ${{ steps.findPr.outputs.pr }}
          message: |
            New release `${{ steps.findPr.outputs.pr }}.${{ github.run_number }}` deployed at [Test Pypi](https://test.pypi.org/project/mpyl/)
          reactions: rocket
          comment_tag: execution
